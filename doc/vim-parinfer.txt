*vim-parinfer.txt*	Simpler Lisp editing in vim


                                                  ( `
   )   (      )                  )  (   (         )\ )    (   ( `
  /((  )\    (     ___ `  )   ( /(  )(  )\   (   (()/(   ))\  )( `
 (_))\((_)   )\  '|___|/(/(   )(_))(()\((_)  )\ ) /(_)) /((_)(()\ `
 _)((_)(_) _((_))     ((_)_\ ((_)_  ((_)(_) _(_/((_) _|(_))   ((_) `
 \ V / | || '  \()    | '_ \)/ _` || '_|| || ' \))|  _|/ -_) | '_| `
  \_/  |_||_|_|_|     | .__/ \__,_||_|  |_||_||_| |_|  \___| |_| `
                      |_| `


INTRODUCTION                                           *parinfer-introduction*

vim-parinfer is a plugin for parinfer-style editing in vim [0].

[0]: https://shaunlebron.github.io/parinfer/

INSTALLATION                                           *parinfer-installation*

clone vim-parinfer into your vim config using pathogen or vundle

CONFIGURATION                                         *parinfer-configuration*

You can tweak the behavior of vim-parinfer by setting a few variables in your
.vimrc file.

                                               *parinfer-g:vim_parinfer_globs*

Configure the list of |glob()|s vim-parinfer will use when hooking up to
|InsertLeave|, |TextChanged|, and |TextChangedI| events.
>
  let g:vim_parinfer_globs: ['*.lisp']
<
                                           *parinfer-g:vim_parinfer_filetypes*

Configure the list of |filetype|s vim-parinfer should register mappings for:
>
  let g:vim_parinfer_filetypes: ['lisp']
<
                                                *parinfer-g:vim_parinfer_mode*

Tells vim-parinfer to start parinfer in the specified mode.  Possible values
are 'indent' (default), and 'paren'.
>
  let g:vim_parinfer_mode = 'paren'
<

COMMANDS                                                   *parinfer-commands*

                                                *parinfer-:ToggleParinferMode*
:ToggleParinferMode    Toggle between the different parinfer modes (from
                       'indent' to 'paren', and vice-versa)

MAPPINGS                                                   *parinfer-mappings*

<Tab>        indents s-expression
<S-Tab>      dedents s-expression
dd           deletes line and balances parenthesis
p            puts line and balances parenthesis

NOTES                                                         *parinfer-notes*

since v 1.0.0. uses pure vimscript for parinfer parsing
